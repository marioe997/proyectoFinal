type AggregateCartelera {
  count: Int!
}

type AggregateDetalleCartelera {
  count: Int!
}

type AggregateDetalleSala {
  count: Int!
}

type AggregateDetalleTaquilla {
  count: Int!
}

type AggregateSalas {
  count: Int!
}

type AggregateTaquilla {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Cartelera {
  id_pelicula: ID!
  nombre_peli: String!
  sinopsis: String!
  clasificacion: String!
  duracion: Int!
}

type CarteleraConnection {
  pageInfo: PageInfo!
  edges: [CarteleraEdge]!
  aggregate: AggregateCartelera!
}

input CarteleraCreateInput {
  id_pelicula: ID
  nombre_peli: String!
  sinopsis: String!
  clasificacion: String!
  duracion: Int!
}

type CarteleraEdge {
  node: Cartelera!
  cursor: String!
}

enum CarteleraOrderByInput {
  id_pelicula_ASC
  id_pelicula_DESC
  nombre_peli_ASC
  nombre_peli_DESC
  sinopsis_ASC
  sinopsis_DESC
  clasificacion_ASC
  clasificacion_DESC
  duracion_ASC
  duracion_DESC
}

type CarteleraPreviousValues {
  id_pelicula: ID!
  nombre_peli: String!
  sinopsis: String!
  clasificacion: String!
  duracion: Int!
}

type CarteleraSubscriptionPayload {
  mutation: MutationType!
  node: Cartelera
  updatedFields: [String!]
  previousValues: CarteleraPreviousValues
}

input CarteleraSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CarteleraWhereInput
  AND: [CarteleraSubscriptionWhereInput!]
}

input CarteleraUpdateInput {
  nombre_peli: String
  sinopsis: String
  clasificacion: String
  duracion: Int
}

input CarteleraUpdateManyMutationInput {
  nombre_peli: String
  sinopsis: String
  clasificacion: String
  duracion: Int
}

input CarteleraWhereInput {
  id_pelicula: ID
  id_pelicula_not: ID
  id_pelicula_in: [ID!]
  id_pelicula_not_in: [ID!]
  id_pelicula_lt: ID
  id_pelicula_lte: ID
  id_pelicula_gt: ID
  id_pelicula_gte: ID
  id_pelicula_contains: ID
  id_pelicula_not_contains: ID
  id_pelicula_starts_with: ID
  id_pelicula_not_starts_with: ID
  id_pelicula_ends_with: ID
  id_pelicula_not_ends_with: ID
  nombre_peli: String
  nombre_peli_not: String
  nombre_peli_in: [String!]
  nombre_peli_not_in: [String!]
  nombre_peli_lt: String
  nombre_peli_lte: String
  nombre_peli_gt: String
  nombre_peli_gte: String
  nombre_peli_contains: String
  nombre_peli_not_contains: String
  nombre_peli_starts_with: String
  nombre_peli_not_starts_with: String
  nombre_peli_ends_with: String
  nombre_peli_not_ends_with: String
  sinopsis: String
  sinopsis_not: String
  sinopsis_in: [String!]
  sinopsis_not_in: [String!]
  sinopsis_lt: String
  sinopsis_lte: String
  sinopsis_gt: String
  sinopsis_gte: String
  sinopsis_contains: String
  sinopsis_not_contains: String
  sinopsis_starts_with: String
  sinopsis_not_starts_with: String
  sinopsis_ends_with: String
  sinopsis_not_ends_with: String
  clasificacion: String
  clasificacion_not: String
  clasificacion_in: [String!]
  clasificacion_not_in: [String!]
  clasificacion_lt: String
  clasificacion_lte: String
  clasificacion_gt: String
  clasificacion_gte: String
  clasificacion_contains: String
  clasificacion_not_contains: String
  clasificacion_starts_with: String
  clasificacion_not_starts_with: String
  clasificacion_ends_with: String
  clasificacion_not_ends_with: String
  duracion: Int
  duracion_not: Int
  duracion_in: [Int!]
  duracion_not_in: [Int!]
  duracion_lt: Int
  duracion_lte: Int
  duracion_gt: Int
  duracion_gte: Int
  AND: [CarteleraWhereInput!]
}

input CarteleraWhereUniqueInput {
  id_pelicula: ID
}

scalar DateTime

type DetalleCartelera {
  id_pelicula_DC: ID!
  hora_DC: ID!
  dia_DC: ID!
}

type DetalleCarteleraConnection {
  pageInfo: PageInfo!
  edges: [DetalleCarteleraEdge]!
  aggregate: AggregateDetalleCartelera!
}

input DetalleCarteleraCreateInput {
  id_pelicula_DC: ID
  hora_DC: ID
  dia_DC: ID
}

type DetalleCarteleraEdge {
  node: DetalleCartelera!
  cursor: String!
}

enum DetalleCarteleraOrderByInput {
  id_pelicula_DC_ASC
  id_pelicula_DC_DESC
  hora_DC_ASC
  hora_DC_DESC
  dia_DC_ASC
  dia_DC_DESC
}

type DetalleCarteleraPreviousValues {
  id_pelicula_DC: ID!
  hora_DC: ID!
  dia_DC: ID!
}

type DetalleCarteleraSubscriptionPayload {
  mutation: MutationType!
  node: DetalleCartelera
  updatedFields: [String!]
  previousValues: DetalleCarteleraPreviousValues
}

input DetalleCarteleraSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DetalleCarteleraWhereInput
  AND: [DetalleCarteleraSubscriptionWhereInput!]
}

input DetalleCarteleraWhereInput {
  id_pelicula_DC: ID
  id_pelicula_DC_not: ID
  id_pelicula_DC_in: [ID!]
  id_pelicula_DC_not_in: [ID!]
  id_pelicula_DC_lt: ID
  id_pelicula_DC_lte: ID
  id_pelicula_DC_gt: ID
  id_pelicula_DC_gte: ID
  id_pelicula_DC_contains: ID
  id_pelicula_DC_not_contains: ID
  id_pelicula_DC_starts_with: ID
  id_pelicula_DC_not_starts_with: ID
  id_pelicula_DC_ends_with: ID
  id_pelicula_DC_not_ends_with: ID
  hora_DC: ID
  hora_DC_not: ID
  hora_DC_in: [ID!]
  hora_DC_not_in: [ID!]
  hora_DC_lt: ID
  hora_DC_lte: ID
  hora_DC_gt: ID
  hora_DC_gte: ID
  hora_DC_contains: ID
  hora_DC_not_contains: ID
  hora_DC_starts_with: ID
  hora_DC_not_starts_with: ID
  hora_DC_ends_with: ID
  hora_DC_not_ends_with: ID
  dia_DC: ID
  dia_DC_not: ID
  dia_DC_in: [ID!]
  dia_DC_not_in: [ID!]
  dia_DC_lt: ID
  dia_DC_lte: ID
  dia_DC_gt: ID
  dia_DC_gte: ID
  dia_DC_contains: ID
  dia_DC_not_contains: ID
  dia_DC_starts_with: ID
  dia_DC_not_starts_with: ID
  dia_DC_ends_with: ID
  dia_DC_not_ends_with: ID
  AND: [DetalleCarteleraWhereInput!]
}

input DetalleCarteleraWhereUniqueInput {
  id_pelicula_DC: ID
  hora_DC: ID
  dia_DC: ID
}

type DetalleSala {
  no_sala_DS: ID!
  asiento_DS: ID!
  fila_DS: ID!
}

type DetalleSalaConnection {
  pageInfo: PageInfo!
  edges: [DetalleSalaEdge]!
  aggregate: AggregateDetalleSala!
}

input DetalleSalaCreateInput {
  no_sala_DS: ID
  asiento_DS: ID
  fila_DS: ID
}

type DetalleSalaEdge {
  node: DetalleSala!
  cursor: String!
}

enum DetalleSalaOrderByInput {
  no_sala_DS_ASC
  no_sala_DS_DESC
  asiento_DS_ASC
  asiento_DS_DESC
  fila_DS_ASC
  fila_DS_DESC
}

type DetalleSalaPreviousValues {
  no_sala_DS: ID!
  asiento_DS: ID!
  fila_DS: ID!
}

type DetalleSalaSubscriptionPayload {
  mutation: MutationType!
  node: DetalleSala
  updatedFields: [String!]
  previousValues: DetalleSalaPreviousValues
}

input DetalleSalaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DetalleSalaWhereInput
  AND: [DetalleSalaSubscriptionWhereInput!]
}

input DetalleSalaWhereInput {
  no_sala_DS: ID
  no_sala_DS_not: ID
  no_sala_DS_in: [ID!]
  no_sala_DS_not_in: [ID!]
  no_sala_DS_lt: ID
  no_sala_DS_lte: ID
  no_sala_DS_gt: ID
  no_sala_DS_gte: ID
  no_sala_DS_contains: ID
  no_sala_DS_not_contains: ID
  no_sala_DS_starts_with: ID
  no_sala_DS_not_starts_with: ID
  no_sala_DS_ends_with: ID
  no_sala_DS_not_ends_with: ID
  asiento_DS: ID
  asiento_DS_not: ID
  asiento_DS_in: [ID!]
  asiento_DS_not_in: [ID!]
  asiento_DS_lt: ID
  asiento_DS_lte: ID
  asiento_DS_gt: ID
  asiento_DS_gte: ID
  asiento_DS_contains: ID
  asiento_DS_not_contains: ID
  asiento_DS_starts_with: ID
  asiento_DS_not_starts_with: ID
  asiento_DS_ends_with: ID
  asiento_DS_not_ends_with: ID
  fila_DS: ID
  fila_DS_not: ID
  fila_DS_in: [ID!]
  fila_DS_not_in: [ID!]
  fila_DS_lt: ID
  fila_DS_lte: ID
  fila_DS_gt: ID
  fila_DS_gte: ID
  fila_DS_contains: ID
  fila_DS_not_contains: ID
  fila_DS_starts_with: ID
  fila_DS_not_starts_with: ID
  fila_DS_ends_with: ID
  fila_DS_not_ends_with: ID
  AND: [DetalleSalaWhereInput!]
}

input DetalleSalaWhereUniqueInput {
  no_sala_DS: ID
  asiento_DS: ID
  fila_DS: ID
}

type DetalleTaquilla {
  no_venta_DT: ID!
  no_sala: ID!
  asiento: ID!
  fila: ID!
  id_pelicula_DT: ID!
  hora: ID!
  dia: ID!
}

type DetalleTaquillaConnection {
  pageInfo: PageInfo!
  edges: [DetalleTaquillaEdge]!
  aggregate: AggregateDetalleTaquilla!
}

input DetalleTaquillaCreateInput {
  no_venta_DT: ID
  no_sala: ID
  asiento: ID
  fila: ID
  id_pelicula_DT: ID
  hora: ID
  dia: ID
}

type DetalleTaquillaEdge {
  node: DetalleTaquilla!
  cursor: String!
}

enum DetalleTaquillaOrderByInput {
  no_venta_DT_ASC
  no_venta_DT_DESC
  no_sala_ASC
  no_sala_DESC
  asiento_ASC
  asiento_DESC
  fila_ASC
  fila_DESC
  id_pelicula_DT_ASC
  id_pelicula_DT_DESC
  hora_ASC
  hora_DESC
  dia_ASC
  dia_DESC
}

type DetalleTaquillaPreviousValues {
  no_venta_DT: ID!
  no_sala: ID!
  asiento: ID!
  fila: ID!
  id_pelicula_DT: ID!
  hora: ID!
  dia: ID!
}

type DetalleTaquillaSubscriptionPayload {
  mutation: MutationType!
  node: DetalleTaquilla
  updatedFields: [String!]
  previousValues: DetalleTaquillaPreviousValues
}

input DetalleTaquillaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DetalleTaquillaWhereInput
  AND: [DetalleTaquillaSubscriptionWhereInput!]
}

input DetalleTaquillaWhereInput {
  no_venta_DT: ID
  no_venta_DT_not: ID
  no_venta_DT_in: [ID!]
  no_venta_DT_not_in: [ID!]
  no_venta_DT_lt: ID
  no_venta_DT_lte: ID
  no_venta_DT_gt: ID
  no_venta_DT_gte: ID
  no_venta_DT_contains: ID
  no_venta_DT_not_contains: ID
  no_venta_DT_starts_with: ID
  no_venta_DT_not_starts_with: ID
  no_venta_DT_ends_with: ID
  no_venta_DT_not_ends_with: ID
  no_sala: ID
  no_sala_not: ID
  no_sala_in: [ID!]
  no_sala_not_in: [ID!]
  no_sala_lt: ID
  no_sala_lte: ID
  no_sala_gt: ID
  no_sala_gte: ID
  no_sala_contains: ID
  no_sala_not_contains: ID
  no_sala_starts_with: ID
  no_sala_not_starts_with: ID
  no_sala_ends_with: ID
  no_sala_not_ends_with: ID
  asiento: ID
  asiento_not: ID
  asiento_in: [ID!]
  asiento_not_in: [ID!]
  asiento_lt: ID
  asiento_lte: ID
  asiento_gt: ID
  asiento_gte: ID
  asiento_contains: ID
  asiento_not_contains: ID
  asiento_starts_with: ID
  asiento_not_starts_with: ID
  asiento_ends_with: ID
  asiento_not_ends_with: ID
  fila: ID
  fila_not: ID
  fila_in: [ID!]
  fila_not_in: [ID!]
  fila_lt: ID
  fila_lte: ID
  fila_gt: ID
  fila_gte: ID
  fila_contains: ID
  fila_not_contains: ID
  fila_starts_with: ID
  fila_not_starts_with: ID
  fila_ends_with: ID
  fila_not_ends_with: ID
  id_pelicula_DT: ID
  id_pelicula_DT_not: ID
  id_pelicula_DT_in: [ID!]
  id_pelicula_DT_not_in: [ID!]
  id_pelicula_DT_lt: ID
  id_pelicula_DT_lte: ID
  id_pelicula_DT_gt: ID
  id_pelicula_DT_gte: ID
  id_pelicula_DT_contains: ID
  id_pelicula_DT_not_contains: ID
  id_pelicula_DT_starts_with: ID
  id_pelicula_DT_not_starts_with: ID
  id_pelicula_DT_ends_with: ID
  id_pelicula_DT_not_ends_with: ID
  hora: ID
  hora_not: ID
  hora_in: [ID!]
  hora_not_in: [ID!]
  hora_lt: ID
  hora_lte: ID
  hora_gt: ID
  hora_gte: ID
  hora_contains: ID
  hora_not_contains: ID
  hora_starts_with: ID
  hora_not_starts_with: ID
  hora_ends_with: ID
  hora_not_ends_with: ID
  dia: ID
  dia_not: ID
  dia_in: [ID!]
  dia_not_in: [ID!]
  dia_lt: ID
  dia_lte: ID
  dia_gt: ID
  dia_gte: ID
  dia_contains: ID
  dia_not_contains: ID
  dia_starts_with: ID
  dia_not_starts_with: ID
  dia_ends_with: ID
  dia_not_ends_with: ID
  AND: [DetalleTaquillaWhereInput!]
}

input DetalleTaquillaWhereUniqueInput {
  no_venta_DT: ID
  no_sala: ID
  asiento: ID
  fila: ID
  id_pelicula_DT: ID
  hora: ID
  dia: ID
}

scalar Long

type Mutation {
  createCartelera(data: CarteleraCreateInput!): Cartelera!
  updateCartelera(data: CarteleraUpdateInput!, where: CarteleraWhereUniqueInput!): Cartelera
  updateManyCarteleras(data: CarteleraUpdateManyMutationInput!, where: CarteleraWhereInput): BatchPayload!
  upsertCartelera(where: CarteleraWhereUniqueInput!, create: CarteleraCreateInput!, update: CarteleraUpdateInput!): Cartelera!
  deleteCartelera(where: CarteleraWhereUniqueInput!): Cartelera
  deleteManyCarteleras(where: CarteleraWhereInput): BatchPayload!
  createDetalleCartelera(data: DetalleCarteleraCreateInput!): DetalleCartelera!
  deleteDetalleCartelera(where: DetalleCarteleraWhereUniqueInput!): DetalleCartelera
  deleteManyDetalleCarteleras(where: DetalleCarteleraWhereInput): BatchPayload!
  createDetalleSala(data: DetalleSalaCreateInput!): DetalleSala!
  deleteDetalleSala(where: DetalleSalaWhereUniqueInput!): DetalleSala
  deleteManyDetalleSalas(where: DetalleSalaWhereInput): BatchPayload!
  createDetalleTaquilla(data: DetalleTaquillaCreateInput!): DetalleTaquilla!
  deleteDetalleTaquilla(where: DetalleTaquillaWhereUniqueInput!): DetalleTaquilla
  deleteManyDetalleTaquillas(where: DetalleTaquillaWhereInput): BatchPayload!
  createSalas(data: SalasCreateInput!): Salas!
  updateSalas(data: SalasUpdateInput!, where: SalasWhereUniqueInput!): Salas
  updateManySalases(data: SalasUpdateManyMutationInput!, where: SalasWhereInput): BatchPayload!
  upsertSalas(where: SalasWhereUniqueInput!, create: SalasCreateInput!, update: SalasUpdateInput!): Salas!
  deleteSalas(where: SalasWhereUniqueInput!): Salas
  deleteManySalases(where: SalasWhereInput): BatchPayload!
  createTaquilla(data: TaquillaCreateInput!): Taquilla!
  updateTaquilla(data: TaquillaUpdateInput!, where: TaquillaWhereUniqueInput!): Taquilla
  updateManyTaquillas(data: TaquillaUpdateManyMutationInput!, where: TaquillaWhereInput): BatchPayload!
  upsertTaquilla(where: TaquillaWhereUniqueInput!, create: TaquillaCreateInput!, update: TaquillaUpdateInput!): Taquilla!
  deleteTaquilla(where: TaquillaWhereUniqueInput!): Taquilla
  deleteManyTaquillas(where: TaquillaWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  cartelera(where: CarteleraWhereUniqueInput!): Cartelera
  carteleras(where: CarteleraWhereInput, orderBy: CarteleraOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cartelera]!
  cartelerasConnection(where: CarteleraWhereInput, orderBy: CarteleraOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CarteleraConnection!
  detalleCartelera(where: DetalleCarteleraWhereUniqueInput!): DetalleCartelera
  detalleCarteleras(where: DetalleCarteleraWhereInput, orderBy: DetalleCarteleraOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DetalleCartelera]!
  detalleCartelerasConnection(where: DetalleCarteleraWhereInput, orderBy: DetalleCarteleraOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DetalleCarteleraConnection!
  detalleSala(where: DetalleSalaWhereUniqueInput!): DetalleSala
  detalleSalas(where: DetalleSalaWhereInput, orderBy: DetalleSalaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DetalleSala]!
  detalleSalasConnection(where: DetalleSalaWhereInput, orderBy: DetalleSalaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DetalleSalaConnection!
  detalleTaquilla(where: DetalleTaquillaWhereUniqueInput!): DetalleTaquilla
  detalleTaquillas(where: DetalleTaquillaWhereInput, orderBy: DetalleTaquillaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DetalleTaquilla]!
  detalleTaquillasConnection(where: DetalleTaquillaWhereInput, orderBy: DetalleTaquillaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DetalleTaquillaConnection!
  salas(where: SalasWhereUniqueInput!): Salas
  salases(where: SalasWhereInput, orderBy: SalasOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Salas]!
  salasesConnection(where: SalasWhereInput, orderBy: SalasOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SalasConnection!
  taquilla(where: TaquillaWhereUniqueInput!): Taquilla
  taquillas(where: TaquillaWhereInput, orderBy: TaquillaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Taquilla]!
  taquillasConnection(where: TaquillaWhereInput, orderBy: TaquillaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaquillaConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Salas {
  no_sala: ID!
  tipo_sala: String!
  totalAsientos: String!
  totalFunciones: String!
}

type SalasConnection {
  pageInfo: PageInfo!
  edges: [SalasEdge]!
  aggregate: AggregateSalas!
}

input SalasCreateInput {
  no_sala: ID
  tipo_sala: String!
  totalAsientos: String!
  totalFunciones: String!
}

type SalasEdge {
  node: Salas!
  cursor: String!
}

enum SalasOrderByInput {
  no_sala_ASC
  no_sala_DESC
  tipo_sala_ASC
  tipo_sala_DESC
  totalAsientos_ASC
  totalAsientos_DESC
  totalFunciones_ASC
  totalFunciones_DESC
}

type SalasPreviousValues {
  no_sala: ID!
  tipo_sala: String!
  totalAsientos: String!
  totalFunciones: String!
}

type SalasSubscriptionPayload {
  mutation: MutationType!
  node: Salas
  updatedFields: [String!]
  previousValues: SalasPreviousValues
}

input SalasSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SalasWhereInput
  AND: [SalasSubscriptionWhereInput!]
}

input SalasUpdateInput {
  tipo_sala: String
  totalAsientos: String
  totalFunciones: String
}

input SalasUpdateManyMutationInput {
  tipo_sala: String
  totalAsientos: String
  totalFunciones: String
}

input SalasWhereInput {
  no_sala: ID
  no_sala_not: ID
  no_sala_in: [ID!]
  no_sala_not_in: [ID!]
  no_sala_lt: ID
  no_sala_lte: ID
  no_sala_gt: ID
  no_sala_gte: ID
  no_sala_contains: ID
  no_sala_not_contains: ID
  no_sala_starts_with: ID
  no_sala_not_starts_with: ID
  no_sala_ends_with: ID
  no_sala_not_ends_with: ID
  tipo_sala: String
  tipo_sala_not: String
  tipo_sala_in: [String!]
  tipo_sala_not_in: [String!]
  tipo_sala_lt: String
  tipo_sala_lte: String
  tipo_sala_gt: String
  tipo_sala_gte: String
  tipo_sala_contains: String
  tipo_sala_not_contains: String
  tipo_sala_starts_with: String
  tipo_sala_not_starts_with: String
  tipo_sala_ends_with: String
  tipo_sala_not_ends_with: String
  totalAsientos: String
  totalAsientos_not: String
  totalAsientos_in: [String!]
  totalAsientos_not_in: [String!]
  totalAsientos_lt: String
  totalAsientos_lte: String
  totalAsientos_gt: String
  totalAsientos_gte: String
  totalAsientos_contains: String
  totalAsientos_not_contains: String
  totalAsientos_starts_with: String
  totalAsientos_not_starts_with: String
  totalAsientos_ends_with: String
  totalAsientos_not_ends_with: String
  totalFunciones: String
  totalFunciones_not: String
  totalFunciones_in: [String!]
  totalFunciones_not_in: [String!]
  totalFunciones_lt: String
  totalFunciones_lte: String
  totalFunciones_gt: String
  totalFunciones_gte: String
  totalFunciones_contains: String
  totalFunciones_not_contains: String
  totalFunciones_starts_with: String
  totalFunciones_not_starts_with: String
  totalFunciones_ends_with: String
  totalFunciones_not_ends_with: String
  AND: [SalasWhereInput!]
}

input SalasWhereUniqueInput {
  no_sala: ID
}

type Subscription {
  cartelera(where: CarteleraSubscriptionWhereInput): CarteleraSubscriptionPayload
  detalleCartelera(where: DetalleCarteleraSubscriptionWhereInput): DetalleCarteleraSubscriptionPayload
  detalleSala(where: DetalleSalaSubscriptionWhereInput): DetalleSalaSubscriptionPayload
  detalleTaquilla(where: DetalleTaquillaSubscriptionWhereInput): DetalleTaquillaSubscriptionPayload
  salas(where: SalasSubscriptionWhereInput): SalasSubscriptionPayload
  taquilla(where: TaquillaSubscriptionWhereInput): TaquillaSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Taquilla {
  no_venta: ID!
  fecha_t: DateTime!
  hora_t: DateTime!
  total_por_pagar: Float!
}

type TaquillaConnection {
  pageInfo: PageInfo!
  edges: [TaquillaEdge]!
  aggregate: AggregateTaquilla!
}

input TaquillaCreateInput {
  no_venta: ID
  fecha_t: DateTime!
  hora_t: DateTime!
  total_por_pagar: Float!
}

type TaquillaEdge {
  node: Taquilla!
  cursor: String!
}

enum TaquillaOrderByInput {
  no_venta_ASC
  no_venta_DESC
  fecha_t_ASC
  fecha_t_DESC
  hora_t_ASC
  hora_t_DESC
  total_por_pagar_ASC
  total_por_pagar_DESC
}

type TaquillaPreviousValues {
  no_venta: ID!
  fecha_t: DateTime!
  hora_t: DateTime!
  total_por_pagar: Float!
}

type TaquillaSubscriptionPayload {
  mutation: MutationType!
  node: Taquilla
  updatedFields: [String!]
  previousValues: TaquillaPreviousValues
}

input TaquillaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TaquillaWhereInput
  AND: [TaquillaSubscriptionWhereInput!]
}

input TaquillaUpdateInput {
  fecha_t: DateTime
  hora_t: DateTime
  total_por_pagar: Float
}

input TaquillaUpdateManyMutationInput {
  fecha_t: DateTime
  hora_t: DateTime
  total_por_pagar: Float
}

input TaquillaWhereInput {
  no_venta: ID
  no_venta_not: ID
  no_venta_in: [ID!]
  no_venta_not_in: [ID!]
  no_venta_lt: ID
  no_venta_lte: ID
  no_venta_gt: ID
  no_venta_gte: ID
  no_venta_contains: ID
  no_venta_not_contains: ID
  no_venta_starts_with: ID
  no_venta_not_starts_with: ID
  no_venta_ends_with: ID
  no_venta_not_ends_with: ID
  fecha_t: DateTime
  fecha_t_not: DateTime
  fecha_t_in: [DateTime!]
  fecha_t_not_in: [DateTime!]
  fecha_t_lt: DateTime
  fecha_t_lte: DateTime
  fecha_t_gt: DateTime
  fecha_t_gte: DateTime
  hora_t: DateTime
  hora_t_not: DateTime
  hora_t_in: [DateTime!]
  hora_t_not_in: [DateTime!]
  hora_t_lt: DateTime
  hora_t_lte: DateTime
  hora_t_gt: DateTime
  hora_t_gte: DateTime
  total_por_pagar: Float
  total_por_pagar_not: Float
  total_por_pagar_in: [Float!]
  total_por_pagar_not_in: [Float!]
  total_por_pagar_lt: Float
  total_por_pagar_lte: Float
  total_por_pagar_gt: Float
  total_por_pagar_gte: Float
  AND: [TaquillaWhereInput!]
}

input TaquillaWhereUniqueInput {
  no_venta: ID
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String
  name: String!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  password: String
  name: String!
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String
  name: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  email: String
  password: String
  name: String
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
